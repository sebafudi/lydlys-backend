// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  devices Device[]
  spotify Spotify?
}

model Device {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  User    User?   @relation(fields: [userId], references: [id])
  userId  String? @db.ObjectId
  serial  String  @unique
  pub_key String
}

model Spotify {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?  @unique @db.ObjectId
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  scope        String
}

model Show {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  events String?
  Song   Song[]
}

model Compiled {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  data Bytes
  Song Song[]
}

model Song {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  compiled   Compiled? @relation(fields: [compiledId], references: [id])
  compiledId String?   @db.ObjectId
  show       Show?     @relation(fields: [showId], references: [id])
  showId     String?   @db.ObjectId
  Source     Source[]
}

model Source {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  type       String
  externalId String?
  url        String?
  Song       Song?   @relation(fields: [songId], references: [id])
  songId     String? @db.ObjectId
}
