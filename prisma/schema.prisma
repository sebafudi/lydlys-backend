// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  devices Device[]
  spotify Spotify?
}

model Device {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  User    User?   @relation(fields: [userId], references: [id])
  userId  String? @db.ObjectId
  serial  String  @unique
  pub_key String
}

model Spotify {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?  @unique @db.ObjectId
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  scope        String
}

model Show {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  events       String?
  songs        SongShow[]
  CompiledShow CompiledShow[]
}

model Song {
  id      String       @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  artist  String
  shows   SongShow[]
  sources SongSource[]
}

model SongShow {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  song   Song   @relation(fields: [songId], references: [id])
  songId String @db.ObjectId
  show   Show   @relation(fields: [showId], references: [id])
  showId String @db.ObjectId
}

model SongSource {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  song     Song   @relation(fields: [songId], references: [id])
  songId   String @db.ObjectId
  source   String
  sourceId String
  offset   Int
}

model CompiledShow {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  show   Show   @relation(fields: [showId], references: [id])
  showId String @db.ObjectId
  ledNum Int
  file   String
}
